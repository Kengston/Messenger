{"ast":null,"code":"let rerenderTree = () => {\n  console.log('State changed');\n};\n\nlet state = {\n  profilePage: {\n    postsData: [{\n      id: 1,\n      post: 'Го по пиву пацаны'\n    }, {\n      id: 2,\n      post: ')'\n    }],\n    newPost: 'jopa'\n  },\n  dialogsPage: {\n    messagesData: [{\n      id: 1,\n      message: 'Гослинг'\n    }, {\n      id: 2,\n      message: 'Вася'\n    }, {\n      id: 3,\n      message: 'Путин'\n    }],\n    dialogsData: [{\n      id: 1,\n      name: 'Гослинг'\n    }, {\n      id: 2,\n      name: 'Вася'\n    }, {\n      id: 3,\n      name: 'Путин'\n    }, {\n      id: 4,\n      name: 'Трамп'\n    }, {\n      id: 5,\n      name: 'Обама'\n    }, {\n      id: 6,\n      name: 'Мэнсон'\n    }, {\n      id: 7,\n      name: 'Антошка'\n    }],\n    newMessage: 'ya lomal steklo'\n  }\n};\nwindow.state = state;\nexport const addPost = () => {\n  let newPost = {\n    id: 3,\n    post: state.profilePage.newPost\n  };\n  state.profilePage.postsData.push(newPost);\n  state.profilePage.newPost = '';\n  rerenderTree(state);\n};\nexport const updatePost = text => {\n  state.profilePage.newPost = text;\n  rerenderTree(state);\n};\nexport const sendMessage = () => {\n  let newMessage = {\n    id: 4,\n    message: state.dialogsPage.newMessage\n  };\n  state.dialogsPage.messagesData.push(newMessage);\n  state.dialogsPage.newMessage = '';\n  rerenderTree(state);\n};\nexport const updateMessage = newText => {\n  state.dialogsPage.newMessage = newText;\n  rerenderTree(state);\n};\nexport const subscribe = observer => {\n  rerenderTree = observer;\n};\nexport default state;","map":{"version":3,"sources":["/Users/danillysikov/Desktop/Messenger--master/src/redux/state.js"],"names":["rerenderTree","console","log","state","profilePage","postsData","id","post","newPost","dialogsPage","messagesData","message","dialogsData","name","newMessage","window","addPost","push","updatePost","text","sendMessage","updateMessage","newText","subscribe","observer"],"mappings":"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","sourcesContent":["\n\nlet rerenderTree = () => {\n    console.log('State changed');\n}\n\nlet state = {\n    profilePage: {\n        postsData: [\n        {id: 1, post: 'Го по пиву пацаны'},\n        {id: 2, post: ')'}\n    ],\n        newPost: 'jopa'\n    },\n    dialogsPage: {\n        messagesData: [\n        {id: 1, message: 'Гослинг'},\n        {id: 2, message: 'Вася'},\n        {id: 3, message: 'Путин'}\n    ],\n        dialogsData: [\n        {id: 1, name: 'Гослинг'},\n        {id: 2, name: 'Вася'},\n        {id: 3, name: 'Путин'},\n        {id: 4, name: 'Трамп'},\n        {id: 5, name: 'Обама'},\n        {id: 6, name: 'Мэнсон'},\n        {id: 7, name: 'Антошка'}\n    ],\n        newMessage: 'ya lomal steklo'\n\n    }\n}\n\nwindow.state = state;\n\nexport const addPost = () => {\n    let newPost = {\n        id: 3,\n        post: state.profilePage.newPost\n    };\n\n    state.profilePage.postsData.push(newPost);\n    state.profilePage.newPost = '';\n    rerenderTree(state);\n}\n\nexport const updatePost = (text) => {\n    state.profilePage.newPost = text;\n    rerenderTree(state);\n}\n\nexport const sendMessage = () => {\n    let newMessage = {\n        id: 4,\n        message: state.dialogsPage.newMessage\n    };\n\n    state.dialogsPage.messagesData.push(newMessage);\n    state.dialogsPage.newMessage = '';\n    rerenderTree(state);\n}\n\nexport const updateMessage = (newText) => {\n    state.dialogsPage.newMessage = newText;\n    rerenderTree(state);\n}\n\nexport const subscribe = (observer) => {\n    rerenderTree = observer;\n}\n\nexport default state;"]},"metadata":{},"sourceType":"module"}