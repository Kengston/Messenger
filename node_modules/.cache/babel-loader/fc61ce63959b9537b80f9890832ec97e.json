{"ast":null,"code":"const UPDATE_POST = 'UPDATE-POST';\nconst ADD_POST = 'ADD-POST';\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nconst UPDATE_MESSAGE = 'UPDATE-MESSAGE';\nlet store = {\n  _state: {\n    profilePage: {\n      postsData: [{\n        id: 1,\n        post: 'Го по пиву пацаны'\n      }, {\n        id: 2,\n        post: ')'\n      }],\n      newPost: 'jopa'\n    },\n    dialogsPage: {\n      messagesData: [{\n        id: 1,\n        message: 'Гослинг'\n      }, {\n        id: 2,\n        message: 'Вася'\n      }, {\n        id: 3,\n        message: 'Путин'\n      }],\n      dialogsData: [{\n        id: 1,\n        name: 'Гослинг'\n      }, {\n        id: 2,\n        name: 'Вася'\n      }, {\n        id: 3,\n        name: 'Путин'\n      }, {\n        id: 4,\n        name: 'Трамп'\n      }, {\n        id: 5,\n        name: 'Обама'\n      }, {\n        id: 6,\n        name: 'Мэнсон'\n      }, {\n        id: 7,\n        name: 'Антошка'\n      }],\n      newMessage: 'ya lomal steklo'\n    }\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  _callSubscriber() {\n    console.log('State changed');\n  },\n\n  _addPost() {\n    let newPost = {\n      id: 3,\n      post: this._state.profilePage.newPost\n    };\n\n    this._state.profilePage.postsData.push(newPost);\n\n    this._state.profilePage.newPost = '';\n\n    this._callSubscriber(this._state);\n  },\n\n  _updatePost(text) {\n    this._state.profilePage.newPost = text;\n\n    this._callSubscriber(this._state);\n  },\n\n  _sendMessage() {\n    let newMessage = {\n      id: 4,\n      message: this._state.dialogsPage.newMessage\n    };\n\n    this._state.dialogsPage.messagesData.push(newMessage);\n\n    this._state.dialogsPage.newMessage = '';\n\n    this._callSubscriber(this._state);\n  },\n\n  _updateMessage(newText) {\n    this._state.dialogsPage.newMessage = newText;\n\n    this._callSubscriber(this._state);\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      this._addPost();\n    } else if (action.type === UPDATE_POST) {\n      this._updatePost(action.text);\n    }\n\n    if (action.type === SEND_MESSAGE) {\n      this._sendMessage();\n    } else if (action.type === 'UPDATE-MESSAGE') {\n      this._updateMessage(action.newText);\n    }\n  }\n\n};\nexport const updatePostCreator = text => ({\n  type: UPDATE_POST,\n  text: text\n});\nexport const addPostCreator = () => ({\n  type: ADD_POST\n});\nwindow.store = store;\nexport default store;","map":{"version":3,"sources":["/Users/danillysikov/Desktop/Messenger--master/src/redux/state.js"],"names":["UPDATE_POST","ADD_POST","SEND_MESSAGE","UPDATE_MESSAGE","store","_state","profilePage","postsData","id","post","newPost","dialogsPage","messagesData","message","dialogsData","name","newMessage","getState","_callSubscriber","console","log","_addPost","push","_updatePost","text","_sendMessage","_updateMessage","newText","subscribe","observer","dispatch","action","type","updatePostCreator","addPostCreator","window"],"mappings":"AAAA,MAAMA,WAAW,GAAG,aAApB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AAEA,IAAIC,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,SAAS,EAAE,CACP;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE;AAAd,OADO,EAEP;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE;AAAd,OAFO,CADF;AAKTC,MAAAA,OAAO,EAAE;AALA,KADT;AAQJC,IAAAA,WAAW,EAAE;AACTC,MAAAA,YAAY,EAAE,CACV;AAACJ,QAAAA,EAAE,EAAE,CAAL;AAAQK,QAAAA,OAAO,EAAE;AAAjB,OADU,EAEV;AAACL,QAAAA,EAAE,EAAE,CAAL;AAAQK,QAAAA,OAAO,EAAE;AAAjB,OAFU,EAGV;AAACL,QAAAA,EAAE,EAAE,CAAL;AAAQK,QAAAA,OAAO,EAAE;AAAjB,OAHU,CADL;AAMTC,MAAAA,WAAW,EAAE,CACT;AAACN,QAAAA,EAAE,EAAE,CAAL;AAAQO,QAAAA,IAAI,EAAE;AAAd,OADS,EAET;AAACP,QAAAA,EAAE,EAAE,CAAL;AAAQO,QAAAA,IAAI,EAAE;AAAd,OAFS,EAGT;AAACP,QAAAA,EAAE,EAAE,CAAL;AAAQO,QAAAA,IAAI,EAAE;AAAd,OAHS,EAIT;AAACP,QAAAA,EAAE,EAAE,CAAL;AAAQO,QAAAA,IAAI,EAAE;AAAd,OAJS,EAKT;AAACP,QAAAA,EAAE,EAAE,CAAL;AAAQO,QAAAA,IAAI,EAAE;AAAd,OALS,EAMT;AAACP,QAAAA,EAAE,EAAE,CAAL;AAAQO,QAAAA,IAAI,EAAE;AAAd,OANS,EAOT;AAACP,QAAAA,EAAE,EAAE,CAAL;AAAQO,QAAAA,IAAI,EAAE;AAAd,OAPS,CANJ;AAeTC,MAAAA,UAAU,EAAE;AAfH;AART,GADA;;AA4BRC,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKZ,MAAZ;AACD,GA9BO;;AA+BRa,EAAAA,eAAe,GAAG;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,GAjCO;;AAkCRC,EAAAA,QAAQ,GAAG;AACP,QAAIX,OAAO,GAAG;AACVF,MAAAA,EAAE,EAAE,CADM;AAEVC,MAAAA,IAAI,EAAE,KAAKJ,MAAL,CAAYC,WAAZ,CAAwBI;AAFpB,KAAd;;AAKA,SAAKL,MAAL,CAAYC,WAAZ,CAAwBC,SAAxB,CAAkCe,IAAlC,CAAuCZ,OAAvC;;AACA,SAAKL,MAAL,CAAYC,WAAZ,CAAwBI,OAAxB,GAAkC,EAAlC;;AACA,SAAKQ,eAAL,CAAqB,KAAKb,MAA1B;AACH,GA3CO;;AA4CRkB,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKnB,MAAL,CAAYC,WAAZ,CAAwBI,OAAxB,GAAkCc,IAAlC;;AACA,SAAKN,eAAL,CAAqB,KAAKb,MAA1B;AACH,GA/CO;;AAgDRoB,EAAAA,YAAY,GAAG;AACX,QAAIT,UAAU,GAAG;AACbR,MAAAA,EAAE,EAAE,CADS;AAEbK,MAAAA,OAAO,EAAE,KAAKR,MAAL,CAAYM,WAAZ,CAAwBK;AAFpB,KAAjB;;AAKA,SAAKX,MAAL,CAAYM,WAAZ,CAAwBC,YAAxB,CAAqCU,IAArC,CAA0CN,UAA1C;;AACA,SAAKX,MAAL,CAAYM,WAAZ,CAAwBK,UAAxB,GAAqC,EAArC;;AACA,SAAKE,eAAL,CAAqB,KAAKb,MAA1B;AACH,GAzDO;;AA0DRqB,EAAAA,cAAc,CAACC,OAAD,EAAU;AACpB,SAAKtB,MAAL,CAAYM,WAAZ,CAAwBK,UAAxB,GAAqCW,OAArC;;AACA,SAAKT,eAAL,CAAqB,KAAKb,MAA1B;AACH,GA7DO;;AA8DRuB,EAAAA,SAAS,CAACC,QAAD,EAAW;AAChB,SAAKX,eAAL,GAAuBW,QAAvB;AACH,GAhEO;;AAiERC,EAAAA,QAAQ,CAACC,MAAD,EAAS;AACb,QAAIA,MAAM,CAACC,IAAP,KAAgB/B,QAApB,EAA8B;AAC1B,WAAKoB,QAAL;AACH,KAFD,MAEO,IAAIU,MAAM,CAACC,IAAP,KAAgBhC,WAApB,EAAiC;AACpC,WAAKuB,WAAL,CAAiBQ,MAAM,CAACP,IAAxB;AACH;;AACD,QAAIO,MAAM,CAACC,IAAP,KAAgB9B,YAApB,EAAkC;AAC9B,WAAKuB,YAAL;AACH,KAFD,MAEO,IAAIM,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AACzC,WAAKN,cAAL,CAAoBK,MAAM,CAACJ,OAA3B;AACH;AACJ;;AA5EO,CAAZ;AA+EA,OAAO,MAAMM,iBAAiB,GAAIT,IAAD,KAAW;AAACQ,EAAAA,IAAI,EAAEhC,WAAP;AAAoBwB,EAAAA,IAAI,EAAEA;AAA1B,CAAX,CAA1B;AACP,OAAO,MAAMU,cAAc,GAAG,OAAO;AAACF,EAAAA,IAAI,EAAE/B;AAAP,CAAP,CAAvB;AAEPkC,MAAM,CAAC/B,KAAP,GAAeA,KAAf;AACA,eAAeA,KAAf","sourcesContent":["const UPDATE_POST = 'UPDATE-POST';\nconst ADD_POST = 'ADD-POST';\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nconst UPDATE_MESSAGE = 'UPDATE-MESSAGE';\n\nlet store = {\n    _state: {\n        profilePage: {\n            postsData: [\n                {id: 1, post: 'Го по пиву пацаны'},\n                {id: 2, post: ')'}\n            ],\n            newPost: 'jopa'\n        },\n        dialogsPage: {\n            messagesData: [\n                {id: 1, message: 'Гослинг'},\n                {id: 2, message: 'Вася'},\n                {id: 3, message: 'Путин'}\n            ],\n            dialogsData: [\n                {id: 1, name: 'Гослинг'},\n                {id: 2, name: 'Вася'},\n                {id: 3, name: 'Путин'},\n                {id: 4, name: 'Трамп'},\n                {id: 5, name: 'Обама'},\n                {id: 6, name: 'Мэнсон'},\n                {id: 7, name: 'Антошка'}\n            ],\n            newMessage: 'ya lomal steklo'\n\n        }\n    },\n    getState() {\n      return this._state;\n    },\n    _callSubscriber() {\n        console.log('State changed');\n    },\n    _addPost() {\n        let newPost = {\n            id: 3,\n            post: this._state.profilePage.newPost\n        };\n\n        this._state.profilePage.postsData.push(newPost);\n        this._state.profilePage.newPost = '';\n        this._callSubscriber(this._state);\n    },\n    _updatePost(text) {\n        this._state.profilePage.newPost = text;\n        this._callSubscriber(this._state);\n    },\n    _sendMessage() {\n        let newMessage = {\n            id: 4,\n            message: this._state.dialogsPage.newMessage\n        };\n\n        this._state.dialogsPage.messagesData.push(newMessage);\n        this._state.dialogsPage.newMessage = '';\n        this._callSubscriber(this._state);\n    },\n    _updateMessage(newText) {\n        this._state.dialogsPage.newMessage = newText;\n        this._callSubscriber(this._state);\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer;\n    },\n    dispatch(action) {\n        if (action.type === ADD_POST) {\n            this._addPost();\n        } else if (action.type === UPDATE_POST) {\n            this._updatePost(action.text);\n        }\n        if (action.type === SEND_MESSAGE) {\n            this._sendMessage();\n        } else if (action.type === 'UPDATE-MESSAGE') {\n            this._updateMessage(action.newText);\n        }\n    }\n}\n\nexport const updatePostCreator = (text) => ({type: UPDATE_POST, text: text})\nexport const addPostCreator = () => ({type: ADD_POST})\n\nwindow.store = store;\nexport default store;"]},"metadata":{},"sourceType":"module"}